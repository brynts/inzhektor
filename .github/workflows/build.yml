name: Patch IPA

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        required: true
        description: Direct atau Google Drive link

jobs:
  build:
    runs-on: macos-latest
    env:
      IPA_LINK_INPUT: ${{ github.event.inputs.ipa_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Download ipapatch
        run: |
          curl -L https://github.com/asdfzxcvbn/ipapatch/releases/download/v1.1.2/ipapatch.macos-arm64 -o ipapatch
          chmod +x ipapatch

      - name: Download IPA
        run: |
          mkdir -p package
          TARGET=package/input.ipa
          if [[ "$IPA_LINK_INPUT" == *"drive.google.com"* ]]; then
            python3 tools/converter.py "$IPA_LINK_INPUT" -o "$TARGET"
          else
            curl -L -o "$TARGET" "$IPA_LINK_INPUT"
          fi
          [ -s "$TARGET" ] || (echo "::error::Download gagal"; exit 1)

      - name: Patch IPA dan Rename
        run: |
          # Menjalankan main.py untuk patch IPA
          python3 main.py
          # Buat direktori sementara untuk ekstraksi
          mkdir -p temp_payload
          # Ekstrak Payload/Spotify.app/Info.plist
          unzip -q package/patched.ipa "Payload/Spotify.app/Info.plist" -d temp_payload || (echo "::error::Gagal ekstrak Info.plist dari Payload/Spotify.app/Info.plist"; exit 60)
          # Periksa apakah file Info.plist ada
          if [ ! -f temp_payload/Payload/Spotify.app/Info.plist ]; then
            echo "::error::Info.plist tidak ditemukan di Payload/Spotify.app/Info.plist"
            exit 61
          fi
          # Konversi ke format XML
          plutil -convert xml1 temp_payload/Payload/Spotify.app/Info.plist -o temp.plist || (echo "::error::Gagal konversi Info.plist ke XML"; exit 62)
          # Debug: Tampilkan isi Info.plist
          echo "Isi Info.plist:"
          cat temp.plist
          # Ambil CFBundleDisplayName dan CFBundleShortVersionString dengan PlistBuddy
          DISPLAY_NAME=$(PlistBuddy -c "Print CFBundleDisplayName" temp.plist 2>/dev/null || echo "")
          VERSION=$(PlistBuddy -c "Print CFBundleShortVersionString" temp.plist 2>/dev/null || echo "")
          # Fallback ke plutil jika PlistBuddy gagal
          if [ -z "$DISPLAY_NAME" ]; then
            DISPLAY_NAME=$(plutil -p temp.plist | grep "CFBundleDisplayName" | awk -F" => " '{print $2}' | tr -d '"')
          fi
          if [ -z "$VERSION" ]; then
            VERSION=$(plutil -p temp.plist | grep "CFBundleShortVersionString" | awk -F' => "' '{print $2}' | tr -d '"}')
          fi
          # Default jika masih kosong
          [ -z "$DISPLAY_NAME" ] && DISPLAY_NAME="input"
          [ -z "$VERSION" ] && VERSION="0.0"
          echo "CFBundleDisplayName: $DISPLAY_NAME"
          echo "CFBundleShortVersionString: $VERSION"
          # Sanitasi DISPLAY_NAME
          DISPLAY_NAME=$(echo "$DISPLAY_NAME" | tr -d '[:space:]/\\')
          # Ganti . dengan _ di versi
          VERSION=$(echo "$VERSION" | tr '.' '_')
          # Rename file IPA menjadi {CFBundleDisplayName}_v{version}.ipa
          NEW_IPA_NAME="${DISPLAY_NAME}_v${VERSION}.ipa"
          mv package/patched.ipa "package/${NEW_IPA_NAME}"
          # Simpan path IPA ke GITHUB_ENV
          echo "final_ipa_path=package/${NEW_IPA_NAME}" >> $GITHUB_ENV
          # Bersihkan direktori sementara
          rm -rf temp_payload temp.plist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.run_id }}
          name: Release ${{ github.run_id }}
          files: "${{ env.final_ipa_path }}"
          draft: true
          prerelease: false